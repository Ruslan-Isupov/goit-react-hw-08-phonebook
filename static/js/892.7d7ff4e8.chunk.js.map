{"version":3,"file":"static/js/892.7d7ff4e8.chunk.js","mappings":"gOACA,EAA6B,oC,SCGhBA,EAAkB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GACxCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,yBAAIJ,EAAJ,QACA,uBAAIC,KACJ,mBAAQI,UAAWC,EACjBC,KAAK,SACLC,QAAS,WACPL,GAASM,EAAAA,EAAAA,IAAcP,GACxB,EAJH,sBAUL,ECpBD,GAAgB,YAAc,iCAAiC,YAAc,kCCIhEQ,EAAc,WACzB,IAAQC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAAtBF,MACFG,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAErBC,EAAiB,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAOG,QAAO,SAAAG,GAAI,uBAC1CA,EAAKjB,YADqC,aAC1C,EAAWkB,cAAcC,SAASL,EAAOI,cADC,IAI5C,OACE,eAAIb,UAAWC,EAAAA,WAAf,SACGU,GACCA,EAAkBI,KAAI,SAAAC,GACpB,OACE,eAAIhB,UAAWC,EAAAA,YAAf,UACE,SAACP,EAAD,CACEC,KAAMqB,EAAQrB,KACdC,OAAQoB,EAAQpB,OAChBC,GAAImB,EAAQnB,MAJqBmB,EAAQnB,GAQhD,KAGR,E,UC5BD,EAA2B,8BAA3B,EAAyE,mCCM5DoB,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOvB,EAAP,KAAawB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOtB,EAAP,KAAewB,EAAf,KAEMC,EAAmB,SAAAC,GACvB,MAAwBA,EAAEC,OAAlB5B,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,MACD,SAAT7B,EACFwB,EAAQK,GACU,WAAT7B,GACTyB,EAAUI,EAEb,EAEK1B,GAAWC,EAAAA,EAAAA,MACTO,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAAtBF,MAaFmB,EAAY,WAChBN,EAAQ,IACRC,EAAU,GACX,EAED,OACE,iBAAMM,SAbY,SAAAJ,GAClBA,EAAEK,sBACsBC,IANJ,SAAAjC,GACpB,cAAOW,QAAP,IAAOA,OAAP,EAAOA,EAAOuB,MAAK,SAAAjB,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMjB,QAASA,CAAnB,GACxB,CAICmC,CAAcnC,GACVG,GAASiC,EAAAA,EAAAA,IAAW,CAAEpC,KAAAA,EAAMC,OAAAA,KAC5BoC,MAAM,mCACVP,GACD,EAOC,UACE,sBAAUzB,UAAWC,EAArB,WACE,kBAAOgC,QAAQ,YAAf,oBAEA,kBACE/B,KAAK,OACLP,KAAK,OACLuC,QAAQ,yHACRC,MAAM,yIACNX,MAAO7B,EACPyC,SAAUf,EACVxB,GAAG,YACHwC,UAAQ,KAGV,kBAAOJ,QAAQ,cAAf,qBAEA,kBACE/B,KAAK,MACLP,KAAK,SACLuC,QAAQ,yFACRC,MAAM,+FACNX,MAAO5B,EACPwC,SAAUf,EACVxB,GAAG,cACHwC,UAAQ,KAGV,mBAAQrC,UAAWC,EAAmBC,KAAK,SAA3C,6BAIP,ECvED,EAA8B,4BAA9B,EAA4E,gC,UCM/DoC,EAAS,WACpB,IAAMxC,GAAWC,EAAAA,EAAAA,MAIXU,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAG3B,OACE,iBAAKV,UAAWC,EAAhB,WACE,kBAAOgC,QAAQ,SAAf,yCAEA,kBAAOjC,UAAWC,EAChBC,KAAK,OACLP,KAAK,SACL6B,MAAOf,EACP2B,SAbgB,SAAAd,GAAC,OAAIxB,GAASyC,EAAAA,EAAAA,GAAUjB,EAAEC,OAAOC,OAAhC,EAcjB3B,GAAG,SACHwC,UAAQ,MAIf,E,oBCeD,EAhCqB,WACnB,IAAQG,GAAejC,EAAAA,EAAAA,IAAYkC,EAAAA,IAA3BD,WACR,GAAoCjC,EAAAA,EAAAA,IAAYC,EAAAA,IAAxCF,EAAR,EAAQA,MAAOoC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,MACpB7C,GAAWC,EAAAA,EAAAA,MAMjB,OAJA6C,EAAAA,EAAAA,YAAU,WACR9C,GAAS+C,EAAAA,EAAAA,MACV,GAAE,CAAC/C,KAGF,gCACG0C,IACC,iCACE,sCACA,SAACvB,EAAD,KACA,SAACqB,EAAD,IACCI,IAAcC,IACb,SAAC,KAAD,CACEG,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAcjD,EAAAA,EAAAA,gBAGjBK,EAAM6C,OAAS,IAAK,SAAC9C,EAAD,OAf3B,MAqBH,C","sources":["webpack://react-homework-template/./src/components/ElementContacts/ElementContacts.module.css?bd5b","components/ElementContacts/ElementContacts.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonItem\":\"ElementContacts_buttonItem__E1bdF\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from \"./ElementContacts.module.css\"\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nexport const ElementContacts = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p>{name}:</p>\n      <p>{number}</p>\n      <button className={css.buttonItem}\n        type=\"button\"\n        onClick={() => {\n          dispatch(deleteContact(id));\n        }}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nElementContacts.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\"};","import { useSelector } from 'react-redux';\nimport { ElementContacts } from 'components/ElementContacts/ElementContacts';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const { items } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filterContactList = items?.filter(item =>\n    item.name?.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contactLis}>\n      {filterContactList &&\n        filterContactList.map(contact => {\n          return (\n            <li className={css.contactItem} key={contact.id}>\n              <ElementContacts\n                name={contact.name}\n                number={contact.number}\n                id={contact.id}\n              />\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"fieldSet\":\"ContactForm_fieldSet__aVa1Z\",\"contactButton\":\"ContactForm_contactButton__jSKp4\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport css from \"./ContactForm.module.css\"\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleStateInput = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const dispatch = useDispatch();\n  const { items } = useSelector(selectContacts);\n\n  const checkSameName = name => {\n    return items?.find(item => item?.name === name);\n  };\n\n  const addContacts = e => {\n    e.preventDefault();\n    checkSameName(name) === undefined\n      ? dispatch(addContact({ name, number }))\n      : alert('This name exists yet.Try again!');\n    resetForm();\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={addContacts}>\n      <fieldset className={css.fieldSet}>\n        <label htmlFor=\"inputName\">Name </label>\n\n        <input \n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleStateInput}\n          id=\"inputName\"\n          required\n        />\n\n        <label htmlFor=\"inputNumber\">Number</label>\n\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={handleStateInput}\n          id=\"inputNumber\"\n          required\n        />\n\n        <button className={css.contactButton} type=\"submit\">Add contact</button>\n      </fieldset>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterContainer\":\"Filter_filterContainer__8G57N\"};","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport css from './Filter.module.css'\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const setFilterName = e => dispatch(setFilter(e.target.value));\n\n  const filter = useSelector(selectFilter);\n  \n\n  return (\n    <div className={css.filterContainer}>\n      <label htmlFor=\"filter\"> Filters contacts by name </label>\n\n      <input className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={setFilterName}\n        id=\"filter\"\n        required\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selectAuth } from 'redux/selectors';\nimport { selectContacts } from 'redux/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Blocks } from 'react-loader-spinner';\nimport css from '../components/Layout/Layout.module.css';\n\nconst ContactsPage = () => {\n  const { isLoggedIn } = useSelector(selectAuth);\n  const { items, isLoading, error } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoggedIn && (\n        <>\n          <h2>Contacts</h2>\n          <ContactForm />\n          <Filter />\n          {isLoading && !error && (\n            <Blocks\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              ariaLabel=\"blocks-loading\"\n              wrapperClass={css.blocksWrapper}\n            />\n          )}\n          {items.length > 0 && <ContactList />}\n        </>\n      )}\n      ;\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["ElementContacts","name","number","id","dispatch","useDispatch","className","css","type","onClick","deleteContact","ContactList","items","useSelector","selectContacts","filter","selectFilter","filterContactList","item","toLowerCase","includes","map","contact","ContactForm","useState","setName","setNumber","handleStateInput","e","target","value","resetForm","onSubmit","preventDefault","undefined","find","checkSameName","addContact","alert","htmlFor","pattern","title","onChange","required","Filter","setFilter","isLoggedIn","selectAuth","isLoading","error","useEffect","fetchContacts","visible","height","width","ariaLabel","wrapperClass","length"],"sourceRoot":""}